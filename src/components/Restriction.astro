---
import Choices from "./extraInput/Choices.astro";
import Inputs from "./extraInput/Inputs.astro";

export interface Restriction {
	id: string;
	display: string;
	description: string;
	escalation: string;
	additionalDesc?: string;
	options?: [{ [key: string]: string }];
	slot1?: { [key: string]: string };
	slot2?: { [key: string]: string };
	slot3?: { [key: string]: string };
	slot4?: { [key: string]: string };
}

//
const { restriction } = Astro.props;
const id = restriction.id;
const display = restriction.display;
const escalation = restriction.escalation;
const additionalDesc = restriction.additionalDesc;
const options = restriction.options;
const slot1 = restriction.slot1;
const slot2 = restriction.slot2;
const slot3 = restriction.slot3;
const slot4 = restriction.slot4;

const additionalInputID = `${id}-extra`;
---

<div class="selection-wrapper">
	<div
		id={id}
		class="selection"
		data-extra-id={additionalInputID}
		data-escalation={escalation}
	>
		<p>{display}</p>
	</div>

	{options && <Choices restriction={restriction} />}

	{!options && additionalDesc && <Inputs restriction={restriction} />}
</div>
<script>
	import Escalation from "../scripts/escalation";

	const allSelections = document.querySelectorAll(".selection");

	allSelections.forEach((selection) => {
		// Add toggle functionality
		selection.addEventListener("click", () => {
			const id = selection.getAttribute("id");
			const linkedExtraID = selection.getAttribute("data-extra-id");
			const linkedExtra = document.querySelector(`#${linkedExtraID}`);

			selection.classList.toggle("checked");

			switch (selection.classList.contains("checked")) {
				case true:
					// selection is checked
					if (linkedExtra) {
						// selection checked + additional input
						(linkedExtra as HTMLElement).style.display = "flex";
					}

					Escalation.addEscalation(id);
					break;

				case false:
					// selection is not checked
					if (linkedExtra) {
						(linkedExtra as HTMLElement).style.display = "none";
					}

					Escalation.removeEscalation(id);

					break;
			}

			Escalation.updateResult();
		});
	});
</script>

<style>
	.selection {
		display: block;
		padding: 1rem;
		background: lightblue;
		border-top: 1px solid black;
	}

	.checked {
		background: #21cf30;
	}
</style>
